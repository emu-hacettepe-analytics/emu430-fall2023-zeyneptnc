[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Our Course Project",
    "section": "",
    "text": "I’m honored to be a member of the DataVizards project team.\nBelow, you’ll find a brief summary of our project. To access a detailed project description, please go to https://[https://emu-hacettepe-analytics.github.io/emu430-fall2023-team-data_vizards/].\nSummary\nWe will carry out our project by considering 2021 internal migration data across Türkiye. Our main focus is In Migration of internal cities. In this regard, migration trends between different regions such as Eastern Anatolia, Southeastern Anatolia, Aegean, Marmara will be determined and migration relations between big cities and other cities will be analyzed in detail. The relationship between population density and migration will be determined by examining migration rates, especially in cities with large populations. Migration trends will be evaluated according to age groups, gender, educational status and reasons for migration. (retirement, appointment, etc.) Also, the economic development level of the economic region will be interpreted according to the labor force, household disposable income, number of enterprises, number of housing sales, etc. This comprehensive analysis will guide our project in understanding Turkey's migration situation.\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Zeynep TUNCABOYLU's Analytics Lab\n Do Your Job with Pleasure, Success Will Easily Find You!",
    "section": "",
    "text": "Welcome to My Analytics Lab\n\n\n\nHello!\nMy name is Zeynep Tuncaboylu\nThis is my personal webpage.\nPlease stay tuned to follow my works on data analytics, blog posts, and more.\n\n\n\n\n Back to top"
  },
  {
    "objectID": "assignments/assignment-2.html",
    "href": "assignments/assignment-2.html",
    "title": "Assignment 2",
    "section": "",
    "text": "Assignment 2\nQUESTION 1 AND 2\n\n#…….- 31.12.2009 --&gt; 222\nurl1 &lt;- \"https://m.imdb.com/search/title/?title_type=feature&release_date=,2009-12-31&num_votes=2500,&country_of_origin=TR&count=222\"\n\n\n# 01.01.2010-31.12.2023 --&gt; 247\nurl2 &lt;- \"https://m.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,2023-12-31&num_votes=2500,&country_of_origin=TR&count=247\"\n\nvector_url &lt;- c(url1,url2)\n\nlibrary(tidyverse) \nlibrary(stringr) \nlibrary(readr)\nlibrary(rvest) \n\ndata_html_vec &lt;- lapply(vector_url, read_html)\n\ntab1 &lt;- lapply(data_html_vec, function(html) html |&gt; html_nodes(\".ipc-title__text\") |&gt; html_text()) \ncombined_tab1 &lt;- unlist(tab1)\nfilter_tab1 &lt;- combined_tab1[-c(1,224,225,473)]\n\ntab2 &lt;- lapply(data_html_vec, function(html) html |&gt;  html_nodes(\".dli-title-metadata-item:nth-child(1)\") |&gt; html_text())\ncombined_tab2 &lt;- unlist(tab2)\n\ntab3 &lt;- lapply(data_html_vec, function(html) html |&gt; html_nodes(\".dli-title-metadata-item:nth-child(2)\") |&gt; html_text())\ncombined_tab3 &lt;- unlist(tab3)\n\ntab4 &lt;- lapply(data_html_vec, function(html) html |&gt; html_nodes(\".ratingGroup--imdb-rating\") |&gt; html_text())\ncombined_tab4 &lt;- unlist(tab4)\n\ntab5 &lt;- lapply(data_html_vec, function(html) html |&gt; html_nodes(\".kRnqtn\") |&gt; html_text())\ncombined_tab5 &lt;- unlist(tab5)\n\n# extract titles (movie names)\ntitle_names &lt;- lapply(data_html_vec, function(html) html |&gt; html_nodes(\".ipc-title__text\") |&gt; html_text())\ntitle_names &lt;- unlist(title_names)\ntitle_names &lt;- title_names[-c(1,224,225,473)]\ntitle_names &lt;- str_split(title_names, \" \", n = 2)\ntitle_names &lt;- unlist(lapply(title_names, function(x) x[2]))\n\n# extract year (movie year)\nmovie_year &lt;- lapply(data_html_vec, function(html) html |&gt; html_nodes(\".dli-title-metadata-item:nth-child(1)\") |&gt; html_text())\nmovie_year &lt;- as.numeric(unlist(movie_year))\n\n# extract duration (movie duration)\nmovie_duration &lt;- lapply(data_html_vec, function(html) html |&gt; html_nodes(\".dli-title-metadata-item:nth-child(2)\") |&gt; html_text())\nmovie_duration &lt;- unlist(movie_duration)\nconvert_minutes &lt;- function(duration) {\n  get_minute &lt;- strsplit(duration, \"h|\\\\s|m\")[[1]] \n  hours &lt;- as.numeric(get_minute[1])\n  minutes &lt;- as.numeric(get_minute[3])\n  total_minutes &lt;- hours * 60 + minutes\n  if (is.na(total_minutes)) {\n    return(hours)\n  }\n  return(total_minutes)\n}\nresult &lt;- as.numeric(lapply(movie_duration, convert_minutes))\n\n# extract rates (movie rates)\nmovie_rates &lt;- lapply(data_html_vec, function(html) html |&gt; html_nodes(\".ratingGroup--imdb-rating\") |&gt; html_text())\nmovie_rates &lt;- unlist(movie_rates)\nmovie_rates &lt;- str_split(movie_rates,\"\\\\s\",n = 2)\nmovie_rates &lt;- as.numeric(unlist(lapply(movie_rates, function(x) x[1])))\n\n# extract votes (movie votes)\nmovie_votes &lt;- lapply(data_html_vec, function(html) html |&gt; html_nodes(\".kRnqtn\") |&gt; html_text())\nmovie_votes &lt;- unlist(movie_votes)\nmovie_votes &lt;- str_split(movie_votes, \"Votes\", n = 2)\nmovie_votes &lt;- unlist(lapply(movie_votes, function(x) x[2]))\nmovie_votes &lt;- parse_number(sub(\",\", \"\", movie_votes))\n\n# create data frame\nmy_data_frame &lt;- data.frame(movie_names = title_names, movie_year = movie_year, movie_duration = result, movie_rates = movie_rates, movie_votes = movie_votes)\nhead(my_data_frame)\n\n            movie_names movie_year movie_duration movie_rates movie_votes\n1 Nefes: Vatan Sagolsun       2009            128         8.0       35018\n2        Babam ve Oglum       2005            108         8.2       91024\n3             Masumiyet       1997            110         8.1       19284\n4                 Kader       2006            103         7.8       16251\n5                  Uzak       2002            110         7.5       22364\n6                Eskiya       1996            128         8.1       71698\n\n\nQUESTION 3\nI wrote separate code for the first 5 movies and the last 5 movies in this code. First, I sorted them from most viewed to least viewed (the first table shows the top 5 most viewed films). Then, I sorted them from least viewed to most viewed (the second table shows the bottom 5 least viewed films).\n\n# question3 (a)\ndesc_order &lt;- arrange(my_data_frame,desc(movie_rates))\ntop_5 &lt;- head(desc_order,5)\nprint(top_5)\n\n                   movie_names movie_year movie_duration movie_rates\n1               Hababam Sinifi       1975             87         9.2\n2       CM101MMXI Fundamentals       2013            139         9.1\n3                   Tosun Pasa       1976             90         8.9\n4 Hababam Sinifi Sinifta Kaldi       1975             95         8.9\n5                Süt Kardesler       1976             80         8.8\n  movie_votes\n1       42512\n2       46995\n3       24327\n4       24370\n5       20886\n\nasc_order &lt;- my_data_frame |&gt; arrange(movie_rates)\nbottom_5 &lt;- head(asc_order,5)\nprint(bottom_5)\n\n                     movie_names movie_year movie_duration movie_rates\n1 Cumali Ceber: Allah Seni Alsin       2017            100         1.0\n2                           Reis       2017            108         1.0\n3                 Cumali Ceber 2       2018            100         1.2\n4                          Müjde       2022             48         1.2\n5              15/07 Safak Vakti       2021             95         1.2\n  movie_votes\n1       39266\n2       73972\n3       10228\n4        9920\n5       20606\n\n\nI watched ‘Hababam Sınıfı’ and ‘Hababam Sınıfı Sınıfta Kaldı’. I agree with their IMDb ratings because I think these movies are very entertaining. However, I have not watched other movies, so I cannot comment on them.\n\n# question3 (b)\nmy_fav_movie1 &lt;- my_data_frame |&gt; filter(movie_names == \"Yedinci Kogustaki Mucize\")\nmy_fav_movie2 &lt;- my_data_frame |&gt; filter(movie_names == \"Ayla: The Daughter of War\")\nbind_rows(my_fav_movie1,my_fav_movie2)\n\n                movie_names movie_year movie_duration movie_rates movie_votes\n1  Yedinci Kogustaki Mucize       2019            132         8.2       54155\n2 Ayla: The Daughter of War       2017            125         8.3       42990\n\n\nTheir ratings and voting are high and they watched by lots of people.\n\n# question3 (c)\n\n# scatter plot_1\nasc_order &lt;- my_data_frame |&gt; arrange(movie_year)\navg_rating_year &lt;- asc_order |&gt;  group_by(movie_year)|&gt; summarise(avg_rating = mean(movie_rates))\navg_rating_year|&gt; ggplot(aes(movie_year,avg_rating)) + geom_point(color=\"darkblue\") + xlab(\"Year\") +\n  ylab(\"Average Rating\") + ggtitle(\"Average Rating by Year\")\n\n\n\n# scatter plot_2\nnumber_of_movie &lt;- my_data_frame |&gt; group_by(movie_year) |&gt; summarise(movie_number = length(movie_names)) \nnumber_of_movie |&gt;  ggplot(aes(movie_year,movie_number)) + geom_point(color=\"darkgreen\")+ xlab(\"Year\") +\n  ylab(\"Number of Movies\") + ggtitle(\"Number of Movies by Year\")\n\n\n\n# box plot\nmy_data_frame |&gt; mutate(movie_year = reorder(movie_year, movie_rates, FUN = median)) |&gt; \n  ggplot(aes(x = as.factor(movie_year), y = movie_rates, fill = as.factor(movie_year))) + geom_boxplot() +\n  xlab(\"Movie Year\") + ylab(\"Movie Rating\") + ggtitle(\"Rating by Year\") +\n  theme(axis.text.x = element_text(angle= 90, hjust = 1)) + xlab(\"\")  +\n  scale_y_continuous(trans = \"log10\")\n\n\n\n\nThe first two plot is scatter plots and the last one is a box-plot. If we look at the median values of these box plots, we can easily see that the highest rating belongs to the year of 1977, while the lowest rating belongs to the year of 2020.We observe that in the year 2006, the movie rating range is particularly wide. In my opinion, older movies are better than newer ones, and the graph is also confirms my assumption.\n\n# question3 (d)\nmy_data_frame |&gt; ggplot(aes(movie_votes,movie_rates)) + geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE,color=\"red\") +\n  ggtitle(\"Scatter Plot of movie_votes and movie_rates\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nThere is a correlation between the number of votes and the ratings.As the number of votes increases, ratings also increase slightly.\n\n# question3 (e)\nmy_data_frame |&gt; ggplot(aes(movie_duration,movie_rates)) + geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE,color=\"purple\") +\n  ggtitle(\"Scatter Plot of movie_duration and movie_rates\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nThere is no correlation between the ratings and the duration.\nQUESTION 4\n\n# question4 \nurl3 &lt;- \"https://m.imdb.com/search/title/?title_type=feature&groups=top_1000&country_of_origin=TR\"\n\ndata_html &lt;- read_html(url3)\n\n# movie_names\ntab6 &lt;- data_html |&gt; html_nodes(\".ipc-title__text\") |&gt; html_text()\ncombined_tab6 &lt;- unlist(tab6)\nmovie_names &lt;- combined_tab6[-c(1,13)]\nmovie_names &lt;- str_split(movie_names, \" \", n = 2)\nmovie_names &lt;- unlist(lapply(movie_names, function(x) x[2]))\n\n#movie_year\ntab7 &lt;- data_html |&gt; html_nodes(\".dli-title-metadata-item:nth-child(1)\") |&gt; html_text()\nmovie_year &lt;- as.numeric(unlist(tab7))\n\n# create data frame\nmy_data_frame2 &lt;- data.frame(movie_names = movie_names, movie_year = movie_year)\n\n# join\njoin &lt;- inner_join(my_data_frame,my_data_frame2,by = c(\"movie_names\",\"movie_year\"))\narrange_join &lt;- arrange(join,desc(movie_rates))\nprint(arrange_join)\n\n                 movie_names movie_year movie_duration movie_rates movie_votes\n1  Ayla: The Daughter of War       2017            125         8.3       42990\n2             Babam ve Oglum       2005            108         8.2       91024\n3   Yedinci Kogustaki Mucize       2019            132         8.2       54155\n4                     Eskiya       1996            128         8.1       71698\n5   Her Sey Çok Güzel Olacak       1998            107         8.1       27119\n6      Nefes: Vatan Sagolsun       2009            128         8.0       35018\n7                   G.O.R.A.       2004            127         8.0       66029\n8                  Vizontele       2001            110         8.0       38399\n9                 Kis Uykusu       2014            196         8.0       54633\n10               Ahlat Agaci       2018            188         8.0       27002\n11   Bir Zamanlar Anadolu'da       2011            157         7.8       49352\n\n# My first data frame\nhead(desc_order,11)\n\n                    movie_names movie_year movie_duration movie_rates\n1                Hababam Sinifi       1975             87         9.2\n2        CM101MMXI Fundamentals       2013            139         9.1\n3                    Tosun Pasa       1976             90         8.9\n4  Hababam Sinifi Sinifta Kaldi       1975             95         8.9\n5                 Süt Kardesler       1976             80         8.8\n6              Saban Oglu Saban       1977             90         8.7\n7                    Zügürt Aga       1985            101         8.7\n8                 Neseli Günler       1978             95         8.7\n9                   Kibar Feyzo       1978             83         8.7\n10      Hababam Sinifi Uyaniyor       1976             94         8.7\n11               Canim Kardesim       1973             85         8.6\n   movie_votes\n1        42512\n2        46995\n3        24327\n4        24370\n5        20886\n6        18535\n7        16134\n8        11806\n9        17126\n10       20640\n11       10096\n\n\nThe first table is a new table and the second table is my previous table. 11 movies ranking is not the same as the first 11 highest-rated movies in my initial data frame. I think the reason for this is that IMDb’s top 1000 movies list may not be based solely on ratings.\nAccording to my research, IMDb’s calculation method for the movies depends on,\nR = average for the movie (mean) = (rating)\nv = number of votes for the movie = (votes)\nm = minimum votes required to be listed in the Top Rated 1000 list\nC = the mean vote across the whole report these parameters respectively, and the calculated as;\nweighted rating (WR) = (v ÷ (v+m)) × R + (m ÷ (v+m)) × C\n\nNOTES: I write get_minute &lt;- strsplit(duration, “h|\\s|m”)[[1]] line of code with the help of AI and I found function(html) function with the help of AI.\n\n\n\n\n Back to top"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "Education\n\nB.S., Industrial Engineering, Hacettepe University, Turkey, 2020 - ongoing.\n\n\n\nInternships\n\nFirm - TÜBİTAK BİLGEM YTE, position - Candidate Researcher, year - 2023 / ongoing\nFirm - Limaş Liman İşletmeciliği, position - Operation and Planning Intern, year - 2022\n\n\n\nProjects\n\nData Analytics\nTotal Quality Management”\nMaintenance Engineering\nProbability & Statistics For Engineers I-II\nWork Analysis & Design\nApplied Operation Research\nNew Product Development\nBranding and Reputation Administration\nLean Production\nOptimization and Modeling I-II\nProduction Planning and Control I-II\nProject Management\n\n\n\nCourse, Seminar, and Certification Information\n\nLean Leadership Training\nProduction Management Training\nDemand Forecasting, Production Planning Training\nFMCG Career (Fast Moving Consumer Goods Training)\nMS SQL Training\nAdvanced Excel Development and Compliance Training\nMind Mapping\nQuality Awareness Training\nProcess Analysis and Modeling Training\nIndividual Career Planning\nChange and Continuous Improvement (Kaizen)\n6 Sigma\nHuman Resources Management\nCV Preparation and Interview Techniques\n\n\n\nCompetencies\nR, Quarto, Git, Python, Minitab, Office Programs, MS SQL\n\n\nHobbies\nPlaying tennis, Fishing, Swimming\n\n\n\n\n Back to top"
  },
  {
    "objectID": "about.html#internships",
    "href": "about.html#internships",
    "title": "About Me",
    "section": "Internships",
    "text": "Internships\n\nFirm - TÜBİTAK BİLGEM YTE, position - Candidate Researcher, year - 2023 / ongoing\nFirm - Limaş Liman İşletmeciliği, position - Operation and Planning Intern, year - 2022"
  },
  {
    "objectID": "assignments/assignment-1.html",
    "href": "assignments/assignment-1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "My first assignment has three parts.\n\n\n\nTracy Teal / These are a few of my favorite things (about Quarto presentations)\n\n The speaker in this video talks the benefits of giving a presentation in quarto in general. The speaker is Tracy, and she works for R Studio as the Director of the open-source program. Tracy shares that she loves exchanging ideas and that Google Docs is her go-to tool. As a result, she is quite enthusiastic about delivering the presentation, but she also acknowledges that she doesn’t enjoy creating the slides, which is why she hasn’t started. Before she met Quarto, she had never considered that she could put her data and code anywhere she wanted on the slides and integrate these arguments into them. She had also never thought that the slides could be automatically updated when she made major changes to them. She’s talking about how Quarto has, for the first time, made preparation for presentations enjoyable which is why she’s so excited about Quarto.\n She is equating Quarto’s features with her own favorite things. She begins to discuss “Visual Edits” after connecting “Raindrops on Roses” with the term. She says that when she renders the source in R Studio after making changes in the visual section, those changes show up in the presentation section below. She emphasizes how important this is to her because it’s how she puts together her slides. She pairs “Whiskers on kittens” with “Columns and Tables” She points out Quarto’s benefit, which is that we can write code to create columns and quickly change their widths. She claims that there is a great deal of flexibility in how we can arrange things in this space. Regarding ‘Tables’ she describes how, before Quarto, creating tables to add to slides was a complete pain, but now it’s fun. She pairs “Notes for the Speaker” with “Bright Copper Kettles”\n\nShe says the speaker has access to all the information they need during the presentation, including the duration, topics to cover, speaker notes, and additional slides, thanks to the above code we write in R Studio. She combines “Code First Keeps Things Stable” with “Warm Woolen Mittens” Noting that Quarto integrates slides, figures, and code, she highlights the significance of reproducibility in scientific communication. Using a specific figure, the speaker had prepared a few presentations in the past. She tried to recall how to make it, but she was unable. She is reassured by Quarto that everything operates without any problems and that there is no problem. As a result, she thinks it’s critical to share knowledge with both her former self and collaborators. She admits that her former self didn’t always make the best decisions and that she doesn’t always recall what she did. The more integrated everything is, the more documentation you can offer, which facilitates effective and accurate communication about your work as well as replication and sharing. She combines “Themes to Delight In” with “Brown Paper Packages” She discusses how switching up the theme of your presentations is simple with Quarto. Changing the theme will give your slides a new look without requiring you to start from scratch when designing them. She pairs “Formats to Share” with “Tied Up with String” She concludes by saying that she has reached the stage of sharing her presentations. She can share the presentations in PowerPoint, HTML, and PDF formats after they are ready.\n\n\n\n1. While we can use statistical functions directly in R, we can use these functions by calling the library in Python.\nIn R:\n\nx &lt;- c(2,4,6)\naverage &lt;- mean(x)\nprint(average)\n\n[1] 4\n\n\nIn Python:\n\nimport numpy as np\nx = [2,4,6]\naverage = np.mean(x)\nprint(average)\n\n4.0\n\n\n2. While “=” is used for the assignment sign in Python, “&lt;-” is used in R.\nIn R:\n\nx &lt;- c(3,5,7)\nx\n\n[1] 3 5 7\n\n\nIn Python:\n\nx = [3,5,7]\nprint(x)\n\n[3, 5, 7]\n\n\n3. Statisticians created the R language, so its operators are the first thing that comes to mind compared to Python.\nIn R:\n\ny &lt;- 2^2\ny\n\n[1] 4\n\n\nIn Python:\n\ny = 2**2\ny\n\n4\n\n\n\n\n\n\nlibrary(dslabs)\ndata(na_example)\nna_example\n\n   [1]  2  1  3  2  1  3  1  4  3  2  2 NA  2  2  1  4 NA  1  1  2  1  2  2  1\n  [25]  2  5 NA  2  2  3  1  2  4  1  1  1  4  5  2  3  4  1  2  4  1  1  2  1\n  [49]  5 NA NA NA  1  1  5  1  3  1 NA  4  4  7  3  2 NA NA  1 NA  4  1  2  2\n  [73]  3  2  1  2  2  4  3  4  2  3  1  3  2  1  1  1  3  1 NA  3  1  2  2  1\n  [97]  2  2  1  1  4  1  1  2  3  3  2  2  3  3  3  4  1  1  1  2 NA  4  3  4\n [121]  3  1  2  1 NA NA NA NA  1  5  1  2  1  3  5  3  2  2 NA NA NA NA  3  5\n [145]  3  1  1  4  2  4  3  3 NA  2  3  2  6 NA  1  1  2  2  1  3  1  1  5 NA\n [169] NA  2  4 NA  2  5  1  4  3  3 NA  4  3  1  4  1  1  3  1  1 NA NA  3  5\n [193]  2  2  2  3  1  2  2  3  2  1 NA  2 NA  1 NA NA  2  1  1 NA  3 NA  1  2\n [217]  2  1  3  2  2  1  1  2  3  1  1  1  4  3  4  2  2  1  4  1 NA  5  1  4\n [241] NA  3 NA NA  1  1  5  2  3  3  2  4 NA  3  2  5 NA  2  3  4  6  2  2  2\n [265] NA  2 NA  2 NA  3  3  2  2  4  3  1  4  2 NA  2  4 NA  6  2  3  1 NA  2\n [289]  2 NA  1  1  3  2  3  3  1 NA  1  4  2  1  1  3  2  1  2  3  1 NA  2  3\n [313]  3  2  1  2  3  5  5  1  2  3  3  1 NA NA  1  2  4 NA  2  1  1  1  3  2\n [337]  1  1  3  4 NA  1  2  1  1  3  3 NA  1  1  3  5  3  2  3  4  1  4  3  1\n [361] NA  2  1  2  2  1  2  2  6  1  2  4  5 NA  3  4  2  1  1  4  2  1  1  1\n [385]  1  2  1  4  4  1  3 NA  3  3 NA  2 NA  1  2  1  1  4  2  1  4  4 NA  1\n [409]  2 NA  3  2  2  2  1  4  3  6  1  2  3  1  3  2  2  2  1  1  3  2  1  1\n [433]  1  3  2  2 NA  4  4  4  1  1 NA  4  3 NA  1  3  1  3  2  4  2  2  2  3\n [457]  2  1  4  3 NA  1  4  3  1  3  2 NA  3 NA  1  3  1  4  1  1  1  2  4  3\n [481]  1  2  2  2  3  2  3  1  1 NA  3  2  1  1  2 NA  2  2  2  3  3  1  1  2\n [505] NA  1  2  1  1  3  3  1  3  1  1  1  1  1  2  5  1  1  2  2  1  1 NA  1\n [529]  4  1  2  4  1  3  2 NA  1  1 NA  2  1  1  4  2  3  3  1  5  3  1  1  2\n [553] NA  1  1  3  1  3  2  4 NA  2  3  2  1  2  1  1  1  2  2  3  1  5  2 NA\n [577]  2 NA  3  2  2  2  1  5  3  2  3  1 NA  3  1  2  2  2  1  2  2  4 NA  6\n [601]  1  2 NA  1  1  2  2  3 NA  3  2  3  3  4  2 NA  2 NA  4 NA  1  1  2  2\n [625]  3  1  1  1  3 NA  2  5 NA  7  1 NA  4  3  3  1 NA  1  1  1  1  3  2  4\n [649]  2  2  3 NA NA  1  4  3  2  2  2  3  2  4  2  2  4 NA NA NA  6  3  3  1\n [673]  4  4  2  1 NA  1  6 NA  3  3  2  1  1  6 NA  1  5  1 NA  2  6  2 NA  4\n [697]  1  3  1  2 NA  1  1  3  1  2  4  2  1  3  2  4  3  2  2  1  1  5  6  4\n [721]  2  2  2  2  4 NA  1  2  2  2  2  4  5 NA NA NA  4  3  3  3  2  4  2  4\n [745] NA NA NA NA  2  1 NA  2  4  3  2 NA  2  3  1  3  4 NA  1  2  1  2 NA  3\n [769]  1  2  1  2  1  2  1  2  2  2  2  1  1  3  3  1  3  4  3 NA NA  4  2  3\n [793]  2  1  3  2  4  2  2  3  1  2  4  3  3  4 NA  1  4  2  1  1  1  3  1  5\n [817]  2  2  4  2 NA  1  3  1  2 NA  1  2  1  2  1 NA  1  3  2  3  2 NA  2  1\n [841]  4  2 NA NA NA  2  4  2 NA NA  3  1 NA  5  5  2  2  2 NA  2  1  3  1  3\n [865]  2  4  2  4 NA  4  1  2  3  2  3  3  2  3  2  2  2  1  3  2  4  2 NA  3\n [889]  3  2  2 NA NA  3  2  1  2  4  1  1  1  1  4  3  2 NA  3  2 NA  1 NA  3\n [913]  2  1  1  1  2 NA  2  2  3  3  2 NA NA  4  5  2  2  2  1  2  3  1  3  3\n [937]  4  3 NA  1  1  1 NA  4  3  5  1  1  2 NA  2  2  2  2  5  2  2  3  1  2\n [961]  3 NA  1  2 NA NA  2 NA  3  1  1  2  5  3  5  1  1  4 NA  2  1  3  1  1\n [985]  2  4  3  3  3 NA  1  1  2  2  1  1  2  2 NA  2\n\nsum(is.na(na_example))\n\n[1] 145\n\n\n\nno_nas &lt;- ifelse(is.na(na_example),0,na_example)\nno_nas\n\n   [1] 2 1 3 2 1 3 1 4 3 2 2 0 2 2 1 4 0 1 1 2 1 2 2 1 2 5 0 2 2 3 1 2 4 1 1 1 4\n  [38] 5 2 3 4 1 2 4 1 1 2 1 5 0 0 0 1 1 5 1 3 1 0 4 4 7 3 2 0 0 1 0 4 1 2 2 3 2\n  [75] 1 2 2 4 3 4 2 3 1 3 2 1 1 1 3 1 0 3 1 2 2 1 2 2 1 1 4 1 1 2 3 3 2 2 3 3 3\n [112] 4 1 1 1 2 0 4 3 4 3 1 2 1 0 0 0 0 1 5 1 2 1 3 5 3 2 2 0 0 0 0 3 5 3 1 1 4\n [149] 2 4 3 3 0 2 3 2 6 0 1 1 2 2 1 3 1 1 5 0 0 2 4 0 2 5 1 4 3 3 0 4 3 1 4 1 1\n [186] 3 1 1 0 0 3 5 2 2 2 3 1 2 2 3 2 1 0 2 0 1 0 0 2 1 1 0 3 0 1 2 2 1 3 2 2 1\n [223] 1 2 3 1 1 1 4 3 4 2 2 1 4 1 0 5 1 4 0 3 0 0 1 1 5 2 3 3 2 4 0 3 2 5 0 2 3\n [260] 4 6 2 2 2 0 2 0 2 0 3 3 2 2 4 3 1 4 2 0 2 4 0 6 2 3 1 0 2 2 0 1 1 3 2 3 3\n [297] 1 0 1 4 2 1 1 3 2 1 2 3 1 0 2 3 3 2 1 2 3 5 5 1 2 3 3 1 0 0 1 2 4 0 2 1 1\n [334] 1 3 2 1 1 3 4 0 1 2 1 1 3 3 0 1 1 3 5 3 2 3 4 1 4 3 1 0 2 1 2 2 1 2 2 6 1\n [371] 2 4 5 0 3 4 2 1 1 4 2 1 1 1 1 2 1 4 4 1 3 0 3 3 0 2 0 1 2 1 1 4 2 1 4 4 0\n [408] 1 2 0 3 2 2 2 1 4 3 6 1 2 3 1 3 2 2 2 1 1 3 2 1 1 1 3 2 2 0 4 4 4 1 1 0 4\n [445] 3 0 1 3 1 3 2 4 2 2 2 3 2 1 4 3 0 1 4 3 1 3 2 0 3 0 1 3 1 4 1 1 1 2 4 3 1\n [482] 2 2 2 3 2 3 1 1 0 3 2 1 1 2 0 2 2 2 3 3 1 1 2 0 1 2 1 1 3 3 1 3 1 1 1 1 1\n [519] 2 5 1 1 2 2 1 1 0 1 4 1 2 4 1 3 2 0 1 1 0 2 1 1 4 2 3 3 1 5 3 1 1 2 0 1 1\n [556] 3 1 3 2 4 0 2 3 2 1 2 1 1 1 2 2 3 1 5 2 0 2 0 3 2 2 2 1 5 3 2 3 1 0 3 1 2\n [593] 2 2 1 2 2 4 0 6 1 2 0 1 1 2 2 3 0 3 2 3 3 4 2 0 2 0 4 0 1 1 2 2 3 1 1 1 3\n [630] 0 2 5 0 7 1 0 4 3 3 1 0 1 1 1 1 3 2 4 2 2 3 0 0 1 4 3 2 2 2 3 2 4 2 2 4 0\n [667] 0 0 6 3 3 1 4 4 2 1 0 1 6 0 3 3 2 1 1 6 0 1 5 1 0 2 6 2 0 4 1 3 1 2 0 1 1\n [704] 3 1 2 4 2 1 3 2 4 3 2 2 1 1 5 6 4 2 2 2 2 4 0 1 2 2 2 2 4 5 0 0 0 4 3 3 3\n [741] 2 4 2 4 0 0 0 0 2 1 0 2 4 3 2 0 2 3 1 3 4 0 1 2 1 2 0 3 1 2 1 2 1 2 1 2 2\n [778] 2 2 1 1 3 3 1 3 4 3 0 0 4 2 3 2 1 3 2 4 2 2 3 1 2 4 3 3 4 0 1 4 2 1 1 1 3\n [815] 1 5 2 2 4 2 0 1 3 1 2 0 1 2 1 2 1 0 1 3 2 3 2 0 2 1 4 2 0 0 0 2 4 2 0 0 3\n [852] 1 0 5 5 2 2 2 0 2 1 3 1 3 2 4 2 4 0 4 1 2 3 2 3 3 2 3 2 2 2 1 3 2 4 2 0 3\n [889] 3 2 2 0 0 3 2 1 2 4 1 1 1 1 4 3 2 0 3 2 0 1 0 3 2 1 1 1 2 0 2 2 3 3 2 0 0\n [926] 4 5 2 2 2 1 2 3 1 3 3 4 3 0 1 1 1 0 4 3 5 1 1 2 0 2 2 2 2 5 2 2 3 1 2 3 0\n [963] 1 2 0 0 2 0 3 1 1 2 5 3 5 1 1 4 0 2 1 3 1 1 2 4 3 3 3 0 1 1 2 2 1 1 2 2 0\n[1000] 2\n\nsum(is.na(no_nas))\n\n[1] 0"
  },
  {
    "objectID": "assignments/assignment-1.html#a-summary-of-the-video",
    "href": "assignments/assignment-1.html#a-summary-of-the-video",
    "title": "Assignment 1",
    "section": "",
    "text": "Tracy Teal / These are a few of my favorite things (about Quarto presentations)\n\n The speaker in this video talks the benefits of giving a presentation in quarto in general. The speaker is Tracy, and she works for R Studio as the Director of the open-source program. Tracy shares that she loves exchanging ideas and that Google Docs is her go-to tool. As a result, she is quite enthusiastic about delivering the presentation, but she also acknowledges that she doesn’t enjoy creating the slides, which is why she hasn’t started. Before she met Quarto, she had never considered that she could put her data and code anywhere she wanted on the slides and integrate these arguments into them. She had also never thought that the slides could be automatically updated when she made major changes to them. She’s talking about how Quarto has, for the first time, made preparation for presentations enjoyable which is why she’s so excited about Quarto.\n She is equating Quarto’s features with her own favorite things. She begins to discuss “Visual Edits” after connecting “Raindrops on Roses” with the term. She says that when she renders the source in R Studio after making changes in the visual section, those changes show up in the presentation section below. She emphasizes how important this is to her because it’s how she puts together her slides. She pairs “Whiskers on kittens” with “Columns and Tables” She points out Quarto’s benefit, which is that we can write code to create columns and quickly change their widths. She claims that there is a great deal of flexibility in how we can arrange things in this space. Regarding ‘Tables’ she describes how, before Quarto, creating tables to add to slides was a complete pain, but now it’s fun. She pairs “Notes for the Speaker” with “Bright Copper Kettles”\n\nShe says the speaker has access to all the information they need during the presentation, including the duration, topics to cover, speaker notes, and additional slides, thanks to the above code we write in R Studio. She combines “Code First Keeps Things Stable” with “Warm Woolen Mittens” Noting that Quarto integrates slides, figures, and code, she highlights the significance of reproducibility in scientific communication. Using a specific figure, the speaker had prepared a few presentations in the past. She tried to recall how to make it, but she was unable. She is reassured by Quarto that everything operates without any problems and that there is no problem. As a result, she thinks it’s critical to share knowledge with both her former self and collaborators. She admits that her former self didn’t always make the best decisions and that she doesn’t always recall what she did. The more integrated everything is, the more documentation you can offer, which facilitates effective and accurate communication about your work as well as replication and sharing. She combines “Themes to Delight In” with “Brown Paper Packages” She discusses how switching up the theme of your presentations is simple with Quarto. Changing the theme will give your slides a new look without requiring you to start from scratch when designing them. She pairs “Formats to Share” with “Tied Up with String” She concludes by saying that she has reached the stage of sharing her presentations. She can share the presentations in PowerPoint, HTML, and PDF formats after they are ready."
  },
  {
    "objectID": "assignments/assignment-1.html#b-three-differences-between-r-and-python",
    "href": "assignments/assignment-1.html#b-three-differences-between-r-and-python",
    "title": "Assignment 1",
    "section": "",
    "text": "1. While we can use statistical functions directly in R, we can use these functions by calling the library in Python.\nIn R:\n\nx &lt;- c(2,4,6)\naverage &lt;- mean(x)\nprint(average)\n\n[1] 4\n\n\nIn Python:\n\nimport numpy as np\nx = [2,4,6]\naverage = np.mean(x)\nprint(average)\n\n4.0\n\n\n2. While “=” is used for the assignment sign in Python, “&lt;-” is used in R.\nIn R:\n\nx &lt;- c(3,5,7)\nx\n\n[1] 3 5 7\n\n\nIn Python:\n\nx = [3,5,7]\nprint(x)\n\n[3, 5, 7]\n\n\n3. Statisticians created the R language, so its operators are the first thing that comes to mind compared to Python.\nIn R:\n\ny &lt;- 2^2\ny\n\n[1] 4\n\n\nIn Python:\n\ny = 2**2\ny\n\n4"
  },
  {
    "objectID": "assignments/assignment-1.html#c-na_example-data-set",
    "href": "assignments/assignment-1.html#c-na_example-data-set",
    "title": "Assignment 1",
    "section": "",
    "text": "library(dslabs)\ndata(na_example)\nna_example\n\n   [1]  2  1  3  2  1  3  1  4  3  2  2 NA  2  2  1  4 NA  1  1  2  1  2  2  1\n  [25]  2  5 NA  2  2  3  1  2  4  1  1  1  4  5  2  3  4  1  2  4  1  1  2  1\n  [49]  5 NA NA NA  1  1  5  1  3  1 NA  4  4  7  3  2 NA NA  1 NA  4  1  2  2\n  [73]  3  2  1  2  2  4  3  4  2  3  1  3  2  1  1  1  3  1 NA  3  1  2  2  1\n  [97]  2  2  1  1  4  1  1  2  3  3  2  2  3  3  3  4  1  1  1  2 NA  4  3  4\n [121]  3  1  2  1 NA NA NA NA  1  5  1  2  1  3  5  3  2  2 NA NA NA NA  3  5\n [145]  3  1  1  4  2  4  3  3 NA  2  3  2  6 NA  1  1  2  2  1  3  1  1  5 NA\n [169] NA  2  4 NA  2  5  1  4  3  3 NA  4  3  1  4  1  1  3  1  1 NA NA  3  5\n [193]  2  2  2  3  1  2  2  3  2  1 NA  2 NA  1 NA NA  2  1  1 NA  3 NA  1  2\n [217]  2  1  3  2  2  1  1  2  3  1  1  1  4  3  4  2  2  1  4  1 NA  5  1  4\n [241] NA  3 NA NA  1  1  5  2  3  3  2  4 NA  3  2  5 NA  2  3  4  6  2  2  2\n [265] NA  2 NA  2 NA  3  3  2  2  4  3  1  4  2 NA  2  4 NA  6  2  3  1 NA  2\n [289]  2 NA  1  1  3  2  3  3  1 NA  1  4  2  1  1  3  2  1  2  3  1 NA  2  3\n [313]  3  2  1  2  3  5  5  1  2  3  3  1 NA NA  1  2  4 NA  2  1  1  1  3  2\n [337]  1  1  3  4 NA  1  2  1  1  3  3 NA  1  1  3  5  3  2  3  4  1  4  3  1\n [361] NA  2  1  2  2  1  2  2  6  1  2  4  5 NA  3  4  2  1  1  4  2  1  1  1\n [385]  1  2  1  4  4  1  3 NA  3  3 NA  2 NA  1  2  1  1  4  2  1  4  4 NA  1\n [409]  2 NA  3  2  2  2  1  4  3  6  1  2  3  1  3  2  2  2  1  1  3  2  1  1\n [433]  1  3  2  2 NA  4  4  4  1  1 NA  4  3 NA  1  3  1  3  2  4  2  2  2  3\n [457]  2  1  4  3 NA  1  4  3  1  3  2 NA  3 NA  1  3  1  4  1  1  1  2  4  3\n [481]  1  2  2  2  3  2  3  1  1 NA  3  2  1  1  2 NA  2  2  2  3  3  1  1  2\n [505] NA  1  2  1  1  3  3  1  3  1  1  1  1  1  2  5  1  1  2  2  1  1 NA  1\n [529]  4  1  2  4  1  3  2 NA  1  1 NA  2  1  1  4  2  3  3  1  5  3  1  1  2\n [553] NA  1  1  3  1  3  2  4 NA  2  3  2  1  2  1  1  1  2  2  3  1  5  2 NA\n [577]  2 NA  3  2  2  2  1  5  3  2  3  1 NA  3  1  2  2  2  1  2  2  4 NA  6\n [601]  1  2 NA  1  1  2  2  3 NA  3  2  3  3  4  2 NA  2 NA  4 NA  1  1  2  2\n [625]  3  1  1  1  3 NA  2  5 NA  7  1 NA  4  3  3  1 NA  1  1  1  1  3  2  4\n [649]  2  2  3 NA NA  1  4  3  2  2  2  3  2  4  2  2  4 NA NA NA  6  3  3  1\n [673]  4  4  2  1 NA  1  6 NA  3  3  2  1  1  6 NA  1  5  1 NA  2  6  2 NA  4\n [697]  1  3  1  2 NA  1  1  3  1  2  4  2  1  3  2  4  3  2  2  1  1  5  6  4\n [721]  2  2  2  2  4 NA  1  2  2  2  2  4  5 NA NA NA  4  3  3  3  2  4  2  4\n [745] NA NA NA NA  2  1 NA  2  4  3  2 NA  2  3  1  3  4 NA  1  2  1  2 NA  3\n [769]  1  2  1  2  1  2  1  2  2  2  2  1  1  3  3  1  3  4  3 NA NA  4  2  3\n [793]  2  1  3  2  4  2  2  3  1  2  4  3  3  4 NA  1  4  2  1  1  1  3  1  5\n [817]  2  2  4  2 NA  1  3  1  2 NA  1  2  1  2  1 NA  1  3  2  3  2 NA  2  1\n [841]  4  2 NA NA NA  2  4  2 NA NA  3  1 NA  5  5  2  2  2 NA  2  1  3  1  3\n [865]  2  4  2  4 NA  4  1  2  3  2  3  3  2  3  2  2  2  1  3  2  4  2 NA  3\n [889]  3  2  2 NA NA  3  2  1  2  4  1  1  1  1  4  3  2 NA  3  2 NA  1 NA  3\n [913]  2  1  1  1  2 NA  2  2  3  3  2 NA NA  4  5  2  2  2  1  2  3  1  3  3\n [937]  4  3 NA  1  1  1 NA  4  3  5  1  1  2 NA  2  2  2  2  5  2  2  3  1  2\n [961]  3 NA  1  2 NA NA  2 NA  3  1  1  2  5  3  5  1  1  4 NA  2  1  3  1  1\n [985]  2  4  3  3  3 NA  1  1  2  2  1  1  2  2 NA  2\n\nsum(is.na(na_example))\n\n[1] 145\n\n\n\nno_nas &lt;- ifelse(is.na(na_example),0,na_example)\nno_nas\n\n   [1] 2 1 3 2 1 3 1 4 3 2 2 0 2 2 1 4 0 1 1 2 1 2 2 1 2 5 0 2 2 3 1 2 4 1 1 1 4\n  [38] 5 2 3 4 1 2 4 1 1 2 1 5 0 0 0 1 1 5 1 3 1 0 4 4 7 3 2 0 0 1 0 4 1 2 2 3 2\n  [75] 1 2 2 4 3 4 2 3 1 3 2 1 1 1 3 1 0 3 1 2 2 1 2 2 1 1 4 1 1 2 3 3 2 2 3 3 3\n [112] 4 1 1 1 2 0 4 3 4 3 1 2 1 0 0 0 0 1 5 1 2 1 3 5 3 2 2 0 0 0 0 3 5 3 1 1 4\n [149] 2 4 3 3 0 2 3 2 6 0 1 1 2 2 1 3 1 1 5 0 0 2 4 0 2 5 1 4 3 3 0 4 3 1 4 1 1\n [186] 3 1 1 0 0 3 5 2 2 2 3 1 2 2 3 2 1 0 2 0 1 0 0 2 1 1 0 3 0 1 2 2 1 3 2 2 1\n [223] 1 2 3 1 1 1 4 3 4 2 2 1 4 1 0 5 1 4 0 3 0 0 1 1 5 2 3 3 2 4 0 3 2 5 0 2 3\n [260] 4 6 2 2 2 0 2 0 2 0 3 3 2 2 4 3 1 4 2 0 2 4 0 6 2 3 1 0 2 2 0 1 1 3 2 3 3\n [297] 1 0 1 4 2 1 1 3 2 1 2 3 1 0 2 3 3 2 1 2 3 5 5 1 2 3 3 1 0 0 1 2 4 0 2 1 1\n [334] 1 3 2 1 1 3 4 0 1 2 1 1 3 3 0 1 1 3 5 3 2 3 4 1 4 3 1 0 2 1 2 2 1 2 2 6 1\n [371] 2 4 5 0 3 4 2 1 1 4 2 1 1 1 1 2 1 4 4 1 3 0 3 3 0 2 0 1 2 1 1 4 2 1 4 4 0\n [408] 1 2 0 3 2 2 2 1 4 3 6 1 2 3 1 3 2 2 2 1 1 3 2 1 1 1 3 2 2 0 4 4 4 1 1 0 4\n [445] 3 0 1 3 1 3 2 4 2 2 2 3 2 1 4 3 0 1 4 3 1 3 2 0 3 0 1 3 1 4 1 1 1 2 4 3 1\n [482] 2 2 2 3 2 3 1 1 0 3 2 1 1 2 0 2 2 2 3 3 1 1 2 0 1 2 1 1 3 3 1 3 1 1 1 1 1\n [519] 2 5 1 1 2 2 1 1 0 1 4 1 2 4 1 3 2 0 1 1 0 2 1 1 4 2 3 3 1 5 3 1 1 2 0 1 1\n [556] 3 1 3 2 4 0 2 3 2 1 2 1 1 1 2 2 3 1 5 2 0 2 0 3 2 2 2 1 5 3 2 3 1 0 3 1 2\n [593] 2 2 1 2 2 4 0 6 1 2 0 1 1 2 2 3 0 3 2 3 3 4 2 0 2 0 4 0 1 1 2 2 3 1 1 1 3\n [630] 0 2 5 0 7 1 0 4 3 3 1 0 1 1 1 1 3 2 4 2 2 3 0 0 1 4 3 2 2 2 3 2 4 2 2 4 0\n [667] 0 0 6 3 3 1 4 4 2 1 0 1 6 0 3 3 2 1 1 6 0 1 5 1 0 2 6 2 0 4 1 3 1 2 0 1 1\n [704] 3 1 2 4 2 1 3 2 4 3 2 2 1 1 5 6 4 2 2 2 2 4 0 1 2 2 2 2 4 5 0 0 0 4 3 3 3\n [741] 2 4 2 4 0 0 0 0 2 1 0 2 4 3 2 0 2 3 1 3 4 0 1 2 1 2 0 3 1 2 1 2 1 2 1 2 2\n [778] 2 2 1 1 3 3 1 3 4 3 0 0 4 2 3 2 1 3 2 4 2 2 3 1 2 4 3 3 4 0 1 4 2 1 1 1 3\n [815] 1 5 2 2 4 2 0 1 3 1 2 0 1 2 1 2 1 0 1 3 2 3 2 0 2 1 4 2 0 0 0 2 4 2 0 0 3\n [852] 1 0 5 5 2 2 2 0 2 1 3 1 3 2 4 2 4 0 4 1 2 3 2 3 3 2 3 2 2 2 1 3 2 4 2 0 3\n [889] 3 2 2 0 0 3 2 1 2 4 1 1 1 1 4 3 2 0 3 2 0 1 0 3 2 1 1 1 2 0 2 2 3 3 2 0 0\n [926] 4 5 2 2 2 1 2 3 1 3 3 4 3 0 1 1 1 0 4 3 5 1 1 2 0 2 2 2 2 5 2 2 3 1 2 3 0\n [963] 1 2 0 0 2 0 3 1 1 2 5 3 5 1 1 4 0 2 1 3 1 1 2 4 3 3 3 0 1 1 2 2 1 1 2 2 0\n[1000] 2\n\nsum(is.na(no_nas))\n\n[1] 0"
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "My Assignments",
    "section": "",
    "text": "On this page, I showcase the assignment I conducted for the [term and year, e.g. Fall 2023] EMU 430 Data Analytics course.\nPlease use left menu to navigate through my assignments.\nThe most recent update to this page was made on October 25, 2023\n\n\n\n Back to top"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "My Blog",
    "section": "",
    "text": "This page is under construction.\n\n\n\n Back to top"
  }
]